name: src

on:
  push:
    paths:
      - 'src/**'
      - '**.yml'



jobs:
  CodeCheck:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        submodules: "recursive"
        fetch-depth: 1

    - name: cppcheck
      uses: Qful/check-action@master
      with:
        github_token: ${{ secrets.OSQ_REPO_TOKEN }}
        enable: all
        inconclusive: disable
        inline_suppression: disable
        force_language: c
        force: enable
        max_ctu_depth: 2
        std: c11
        output_file: ./codecheck.txt
        other_options: --bug-hunting --verbose --std=c11

    - name: report
      uses: Qful/check-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.OSQ_REPO_TOKEN }}
        BRANCH_NAME: 'master'

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: code_check_report
        path: codecheck.txt

  build:
    strategy:
      fail-fast: false
      matrix:
        dir:
          - "freertos"
          - "gcc"
          # - "spl"
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: make-action
        uses: Qful/make-action@master
        with:
          release: 10-2020-q4

      - name: build
        if: matrix.os == 'ubuntu-latest'
        working-directory: src/template
        run: |
          make ${{ matrix.dir }}

      - name: build
        if: matrix.os == 'windows-latest'
        working-directory: src/template
        run: |
          make ${{ matrix.dir }} SHELL=cmd

      - name: build
        if: matrix.os == 'macos-latest'
        working-directory: src/template
        run: |
          brew install make
          gmake -C ${{ matrix.dir }}

      - uses: actions/upload-artifact@v2
        with:
          name: template_${{ matrix.dir }}
          path: src/template/${{ matrix.dir }}

  platformio:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-16.04, windows-latest, macos-latest]
        python-version: [3.7]
        example:
          - "cmsis-blink"
          - "libopencm3-blink"
          - "mbed-rtos"
          - "stm32cube-hal-blink"
          - "zephyr-subsys-usb-hid-mouse"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/platformio/platformio/archive/develop.zip

      - name: platformio
        working-directory: src/platformio
        run: |
          platformio run -d ${{ matrix.example }}
